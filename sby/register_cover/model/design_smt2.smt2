; SMT-LIBv2 description generated by Yosys 0.9+4081 (open-tool-forge build) (git sha1 ef4ddfac, gcc 9.3.0-17ubuntu1~20.04 -Os)
; yosys-smt2-module register_rw
(declare-sort |register_rw_s| 0)
(declare-fun |register_rw_is| (|register_rw_s|) Bool)
(declare-fun |register_rw#0| (|register_rw_s|) Bool) ; \wren
; yosys-smt2-input wren 1
; yosys-smt2-wire wren 1
(define-fun |register_rw_n wren| ((state |register_rw_s|)) Bool (|register_rw#0| state))
(declare-fun |register_rw#1| (|register_rw_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(define-fun |register_rw_n rst| ((state |register_rw_s|)) Bool (|register_rw#1| state))
(declare-fun |register_rw#2| (|register_rw_s|) (_ BitVec 1)) ; \f_past_valid
; yosys-smt2-register f_past_valid 1
; yosys-smt2-wire f_past_valid 1
(define-fun |register_rw_n f_past_valid| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#2| state)) #b1))
(declare-fun |register_rw#3| (|register_rw_s|) (_ BitVec 32)) ; \dffreg
; yosys-smt2-register dffreg 32
; yosys-smt2-wire dffreg 32
(define-fun |register_rw_n dffreg| ((state |register_rw_s|)) (_ BitVec 32) (|register_rw#3| state))
; yosys-smt2-output data_out 32
; yosys-smt2-wire data_out 32
(define-fun |register_rw_n data_out| ((state |register_rw_s|)) (_ BitVec 32) (|register_rw#3| state))
(declare-fun |register_rw#4| (|register_rw_s|) (_ BitVec 32)) ; \data_in
; yosys-smt2-input data_in 32
; yosys-smt2-wire data_in 32
(define-fun |register_rw_n data_in| ((state |register_rw_s|)) (_ BitVec 32) (|register_rw#4| state))
(declare-fun |register_rw#5| (|register_rw_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |register_rw_n clk| ((state |register_rw_s|)) Bool (|register_rw#5| state))
(declare-fun |register_rw#6| (|register_rw_s|) (_ BitVec 32)) ; $past$register_rw.v:53$5$0
; yosys-smt2-register $past$register_rw.v:53$5$0 32
(define-fun |register_rw_n $past$register_rw.v:53$5$0| ((state |register_rw_s|)) (_ BitVec 32) (|register_rw#6| state))
(declare-fun |register_rw#7| (|register_rw_s|) (_ BitVec 1)) ; $past$register_rw.v:52$3$0
; yosys-smt2-register $past$register_rw.v:52$3$0 1
(define-fun |register_rw_n $past$register_rw.v:52$3$0| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#7| state)) #b1))
(declare-fun |register_rw#8| (|register_rw_s|) (_ BitVec 1)) ; $past$register_rw.v:48$2$0
; yosys-smt2-register $past$register_rw.v:48$2$0 1
(define-fun |register_rw_n $past$register_rw.v:48$2$0| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#8| state)) #b1))
(declare-fun |register_rw#9| (|register_rw_s|) (_ BitVec 32)) ; $past$register_rw.v:48$1$0
; yosys-smt2-register $past$register_rw.v:48$1$0 32
(define-fun |register_rw_n $past$register_rw.v:48$1$0| ((state |register_rw_s|)) (_ BitVec 32) (|register_rw#9| state))
(declare-fun |register_rw#10| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:57$14_EN
; yosys-smt2-register $formal$register_rw.v:57$14_EN 1
(define-fun |register_rw_n $formal$register_rw.v:57$14_EN| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#10| state)) #b1))
(declare-fun |register_rw#11| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:57$14_CHECK
; yosys-smt2-register $formal$register_rw.v:57$14_CHECK 1
(define-fun |register_rw_n $formal$register_rw.v:57$14_CHECK| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#11| state)) #b1))
(declare-fun |register_rw#12| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:53$13_EN
; yosys-smt2-register $formal$register_rw.v:53$13_EN 1
(define-fun |register_rw_n $formal$register_rw.v:53$13_EN| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#12| state)) #b1))
(declare-fun |register_rw#13| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:53$13_CHECK
; yosys-smt2-register $formal$register_rw.v:53$13_CHECK 1
(define-fun |register_rw_n $formal$register_rw.v:53$13_CHECK| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#13| state)) #b1))
(declare-fun |register_rw#14| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:47$12_CHECK
; yosys-smt2-register $formal$register_rw.v:47$12_CHECK 1
(define-fun |register_rw_n $formal$register_rw.v:47$12_CHECK| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#14| state)) #b1))
(declare-fun |register_rw#15| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:44$11_EN
; yosys-smt2-register $formal$register_rw.v:44$11_EN 1
(define-fun |register_rw_n $formal$register_rw.v:44$11_EN| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#15| state)) #b1))
(declare-fun |register_rw#16| (|register_rw_s|) (_ BitVec 1)) ; $formal$register_rw.v:44$11_CHECK
; yosys-smt2-register $formal$register_rw.v:44$11_CHECK 1
(define-fun |register_rw_n $formal$register_rw.v:44$11_CHECK| ((state |register_rw_s|)) Bool (= ((_ extract 0 0) (|register_rw#16| state)) #b1))
; yosys-smt2-assert 0 _remember_
(define-fun |register_rw_a 0| ((state |register_rw_s|)) Bool (or (= ((_ extract 0 0) (|register_rw#11| state)) #b1) (not (= ((_ extract 0 0) (|register_rw#10| state)) #b1)))) ; _remember_
; yosys-smt2-assert 1 _load_
(define-fun |register_rw_a 1| ((state |register_rw_s|)) Bool (or (= ((_ extract 0 0) (|register_rw#13| state)) #b1) (not (= ((_ extract 0 0) (|register_rw#12| state)) #b1)))) ; _load_
; yosys-smt2-cover 0 register_rw.v:47.20-48.62
(define-fun |register_rw_c 0| ((state |register_rw_s|)) Bool (and (= ((_ extract 0 0) (|register_rw#14| state)) #b1) (= ((_ extract 0 0) (|register_rw#15| state)) #b1))) ; $cover$register_rw.v:47$55
; yosys-smt2-cover 1 register_rw.v:44.20-45.26
(define-fun |register_rw_c 1| ((state |register_rw_s|)) Bool (and (= ((_ extract 0 0) (|register_rw#16| state)) #b1) (= ((_ extract 0 0) (|register_rw#15| state)) #b1))) ; $cover$register_rw.v:44$54
(define-fun |register_rw#17| ((state |register_rw_s|)) Bool (|register_rw_is| state)) ; $0$formal$register_rw.v:37$9_EN[0:0]$59
; yosys-smt2-assume 0 register_rw.v:37.9-37.21
(define-fun |register_rw_u 0| ((state |register_rw_s|)) Bool (or (|register_rw#1| state) (not (|register_rw#17| state)))) ; $assume$register_rw.v:37$53
; yosys-smt2-anyseq register_rw#18 1 $auto$setundef.cc:501:execute$115
(declare-fun |register_rw#18| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$116
(define-fun |register_rw#19| ((state |register_rw_s|)) Bool (not (or  (|register_rw#1| state) false))) ; $logic_not$register_rw.v:45$33_Y
(define-fun |register_rw#20| ((state |register_rw_s|)) Bool (and (or  (= ((_ extract 0 0) (|register_rw#3| state)) #b1) (= ((_ extract 1 1) (|register_rw#3| state)) #b1) (= ((_ extract 2 2) (|register_rw#3| state)) #b1) (= ((_ extract 3 3) (|register_rw#3| state)) #b1) (= ((_ extract 4 4) (|register_rw#3| state)) #b1) (= ((_ extract 5 5) (|register_rw#3| state)) #b1) (= ((_ extract 6 6) (|register_rw#3| state)) #b1) (= ((_ extract 7 7) (|register_rw#3| state)) #b1) (= ((_ extract 8 8) (|register_rw#3| state)) #b1) (= ((_ extract 9 9) (|register_rw#3| state)) #b1) (= ((_ extract 10 10) (|register_rw#3| state)) #b1) (= ((_ extract 11 11) (|register_rw#3| state)) #b1) (= ((_ extract 12 12) (|register_rw#3| state)) #b1) (= ((_ extract 13 13) (|register_rw#3| state)) #b1) (= ((_ extract 14 14) (|register_rw#3| state)) #b1) (= ((_ extract 15 15) (|register_rw#3| state)) #b1) (= ((_ extract 16 16) (|register_rw#3| state)) #b1) (= ((_ extract 17 17) (|register_rw#3| state)) #b1) (= ((_ extract 18 18) (|register_rw#3| state)) #b1) (= ((_ extract 19 19) (|register_rw#3| state)) #b1) (= ((_ extract 20 20) (|register_rw#3| state)) #b1) (= ((_ extract 21 21) (|register_rw#3| state)) #b1) (= ((_ extract 22 22) (|register_rw#3| state)) #b1) (= ((_ extract 23 23) (|register_rw#3| state)) #b1) (= ((_ extract 24 24) (|register_rw#3| state)) #b1) (= ((_ extract 25 25) (|register_rw#3| state)) #b1) (= ((_ extract 26 26) (|register_rw#3| state)) #b1) (= ((_ extract 27 27) (|register_rw#3| state)) #b1) (= ((_ extract 28 28) (|register_rw#3| state)) #b1) (= ((_ extract 29 29) (|register_rw#3| state)) #b1) (= ((_ extract 30 30) (|register_rw#3| state)) #b1) (= ((_ extract 31 31) (|register_rw#3| state)) #b1)) (or  (|register_rw#19| state) false))) ; $logic_and$register_rw.v:45$34_Y
(define-fun |register_rw#21| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (ite (|register_rw#20| state) #b1 #b0) (|register_rw#18| state))) ; $0$formal$register_rw.v:44$11_CHECK[0:0]$25
(define-fun |register_rw#22| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) #b1 #b0)) ; $0$formal$register_rw.v:44$11_EN[0:0]$26
; yosys-smt2-anyseq register_rw#23 1 $auto$setundef.cc:501:execute$117
(declare-fun |register_rw#23| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$118
(define-fun |register_rw#24| ((state |register_rw_s|)) Bool (distinct (|register_rw#3| state) #b00000000000000000000000000000000)) ; $reduce_or$register_rw.v:48$35_Y
(define-fun |register_rw#25| ((state |register_rw_s|)) Bool (not (or  (|register_rw#24| state) false))) ; $logic_not$register_rw.v:48$36_Y
(define-fun |register_rw#26| ((state |register_rw_s|)) Bool (and (or  (|register_rw#25| state) false) (or  (= ((_ extract 0 0) (|register_rw#9| state)) #b1) (= ((_ extract 1 1) (|register_rw#9| state)) #b1) (= ((_ extract 2 2) (|register_rw#9| state)) #b1) (= ((_ extract 3 3) (|register_rw#9| state)) #b1) (= ((_ extract 4 4) (|register_rw#9| state)) #b1) (= ((_ extract 5 5) (|register_rw#9| state)) #b1) (= ((_ extract 6 6) (|register_rw#9| state)) #b1) (= ((_ extract 7 7) (|register_rw#9| state)) #b1) (= ((_ extract 8 8) (|register_rw#9| state)) #b1) (= ((_ extract 9 9) (|register_rw#9| state)) #b1) (= ((_ extract 10 10) (|register_rw#9| state)) #b1) (= ((_ extract 11 11) (|register_rw#9| state)) #b1) (= ((_ extract 12 12) (|register_rw#9| state)) #b1) (= ((_ extract 13 13) (|register_rw#9| state)) #b1) (= ((_ extract 14 14) (|register_rw#9| state)) #b1) (= ((_ extract 15 15) (|register_rw#9| state)) #b1) (= ((_ extract 16 16) (|register_rw#9| state)) #b1) (= ((_ extract 17 17) (|register_rw#9| state)) #b1) (= ((_ extract 18 18) (|register_rw#9| state)) #b1) (= ((_ extract 19 19) (|register_rw#9| state)) #b1) (= ((_ extract 20 20) (|register_rw#9| state)) #b1) (= ((_ extract 21 21) (|register_rw#9| state)) #b1) (= ((_ extract 22 22) (|register_rw#9| state)) #b1) (= ((_ extract 23 23) (|register_rw#9| state)) #b1) (= ((_ extract 24 24) (|register_rw#9| state)) #b1) (= ((_ extract 25 25) (|register_rw#9| state)) #b1) (= ((_ extract 26 26) (|register_rw#9| state)) #b1) (= ((_ extract 27 27) (|register_rw#9| state)) #b1) (= ((_ extract 28 28) (|register_rw#9| state)) #b1) (= ((_ extract 29 29) (|register_rw#9| state)) #b1) (= ((_ extract 30 30) (|register_rw#9| state)) #b1) (= ((_ extract 31 31) (|register_rw#9| state)) #b1)))) ; $logic_and$register_rw.v:48$37_Y
(define-fun |register_rw#27| ((state |register_rw_s|)) Bool (not (or  (= ((_ extract 0 0) (|register_rw#8| state)) #b1) false))) ; $logic_not$register_rw.v:48$38_Y
(define-fun |register_rw#28| ((state |register_rw_s|)) Bool (and (or  (|register_rw#26| state) false) (or  (|register_rw#27| state) false))) ; $logic_and$register_rw.v:48$39_Y
(define-fun |register_rw#29| ((state |register_rw_s|)) Bool (and (or  (|register_rw#28| state) false) (or  (|register_rw#19| state) false))) ; $logic_and$register_rw.v:48$41_Y
(define-fun |register_rw#30| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (ite (|register_rw#29| state) #b1 #b0) (|register_rw#23| state))) ; $0$formal$register_rw.v:47$12_CHECK[0:0]$27
; yosys-smt2-anyseq register_rw#31 1 $auto$setundef.cc:501:execute$121
(declare-fun |register_rw#31| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$122
; yosys-smt2-anyseq register_rw#32 1 $auto$setundef.cc:501:execute$119
(declare-fun |register_rw#32| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$120
(define-fun |register_rw#33| ((state |register_rw_s|)) Bool (= (|register_rw#3| state) (|register_rw#6| state))) ; $eq$register_rw.v:53$46_Y
(define-fun |register_rw#34| ((state |register_rw_s|)) Bool (not (or  (|register_rw#0| state) false))) ; $logic_not$register_rw.v:52$42_Y
(define-fun |register_rw#35| ((state |register_rw_s|)) Bool (and (or  (= ((_ extract 0 0) (|register_rw#7| state)) #b1) false) (or  (|register_rw#34| state) false))) ; $logic_and$register_rw.v:52$43_Y
(define-fun |register_rw#36| ((state |register_rw_s|)) Bool (and (or  (|register_rw#35| state) false) (or  (|register_rw#27| state) false))) ; $logic_and$register_rw.v:52$45_Y
(define-fun |register_rw#37| ((state |register_rw_s|)) (_ BitVec 1) (ite (|register_rw#36| state) (ite (|register_rw#33| state) #b1 #b0) (|register_rw#32| state))) ; $procmux$80_Y
(define-fun |register_rw#38| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (|register_rw#37| state) (|register_rw#31| state))) ; $0$formal$register_rw.v:53$13_CHECK[0:0]$29
(define-fun |register_rw#39| ((state |register_rw_s|)) (_ BitVec 1) (ite (|register_rw#36| state) #b1 #b0)) ; $procmux$76_Y
(define-fun |register_rw#40| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (|register_rw#39| state) #b0)) ; $auto$rtlil.cc:2224:Mux$136
; yosys-smt2-anyseq register_rw#41 1 $auto$setundef.cc:501:execute$125
(declare-fun |register_rw#41| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$126
; yosys-smt2-anyseq register_rw#42 1 $auto$setundef.cc:501:execute$123
(declare-fun |register_rw#42| (|register_rw_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2817:Anyseq$124
(define-fun |register_rw#43| ((state |register_rw_s|)) Bool (= (|register_rw#3| state) (|register_rw#9| state))) ; $eq$register_rw.v:57$52_Y
(define-fun |register_rw#44| ((state |register_rw_s|)) Bool (not (or  (= ((_ extract 0 0) (|register_rw#7| state)) #b1) false))) ; $logic_not$register_rw.v:56$47_Y
(define-fun |register_rw#45| ((state |register_rw_s|)) Bool (and (or  (|register_rw#44| state) false) (or  (|register_rw#34| state) false))) ; $logic_and$register_rw.v:56$49_Y
(define-fun |register_rw#46| ((state |register_rw_s|)) Bool (and (or  (|register_rw#45| state) false) (or  (|register_rw#27| state) false))) ; $logic_and$register_rw.v:56$51_Y
(define-fun |register_rw#47| ((state |register_rw_s|)) (_ BitVec 1) (ite (|register_rw#46| state) (ite (|register_rw#43| state) #b1 #b0) (|register_rw#42| state))) ; $procmux$88_Y
(define-fun |register_rw#48| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (|register_rw#47| state) (|register_rw#41| state))) ; $0$formal$register_rw.v:57$14_CHECK[0:0]$31
(define-fun |register_rw#49| ((state |register_rw_s|)) (_ BitVec 1) (ite (|register_rw#46| state) #b1 #b0)) ; $procmux$84_Y
(define-fun |register_rw#50| ((state |register_rw_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|register_rw#2| state)) #b1) (|register_rw#49| state) #b0)) ; $auto$rtlil.cc:2224:Mux$138
(define-fun |register_rw#51| ((state |register_rw_s|)) (_ BitVec 32) (ite (|register_rw#0| state) (|register_rw#4| state) (|register_rw#3| state))) ; $auto$rtlil.cc:2224:Mux$132
(define-fun |register_rw#52| ((state |register_rw_s|)) (_ BitVec 32) (ite (|register_rw#1| state) #b00000000000000000000000000000000 (|register_rw#51| state))) ; $auto$rtlil.cc:2224:Mux$134
(define-fun |register_rw_a| ((state |register_rw_s|)) Bool (and
  (|register_rw_a 0| state)
  (|register_rw_a 1| state)
))
(define-fun |register_rw_u| ((state |register_rw_s|)) Bool 
  (|register_rw_u 0| state)
)
(define-fun |register_rw_i| ((state |register_rw_s|)) Bool (and
  (= (= ((_ extract 0 0) (|register_rw#2| state)) #b1) false) ; f_past_valid
  (= (= ((_ extract 0 0) (|register_rw#10| state)) #b1) false) ; $formal$register_rw.v:57$14_EN
  (= (= ((_ extract 0 0) (|register_rw#12| state)) #b1) false) ; $formal$register_rw.v:53$13_EN
  (= (= ((_ extract 0 0) (|register_rw#15| state)) #b1) false) ; $formal$register_rw.v:44$11_EN
))
(define-fun |register_rw_h| ((state |register_rw_s|)) Bool true)
(define-fun |register_rw_t| ((state |register_rw_s|) (next_state |register_rw_s|)) Bool (and
  (= (|register_rw#21| state) (|register_rw#16| next_state)) ; $procdff$106 $formal$register_rw.v:44$11_CHECK
  (= (|register_rw#22| state) (|register_rw#15| next_state)) ; $procdff$107 $formal$register_rw.v:44$11_EN
  (= (|register_rw#30| state) (|register_rw#14| next_state)) ; $procdff$108 $formal$register_rw.v:47$12_CHECK
  (= (|register_rw#38| state) (|register_rw#13| next_state)) ; $procdff$110 $formal$register_rw.v:53$13_CHECK
  (= (|register_rw#40| state) (|register_rw#12| next_state)) ; $auto$opt_dff.cc:702:run$130 $formal$register_rw.v:53$13_EN
  (= (|register_rw#48| state) (|register_rw#11| next_state)) ; $procdff$112 $formal$register_rw.v:57$14_CHECK
  (= (|register_rw#50| state) (|register_rw#10| next_state)) ; $auto$opt_dff.cc:702:run$129 $formal$register_rw.v:57$14_EN
  (= (|register_rw#3| state) (|register_rw#9| next_state)) ; $procdff$105 $past$register_rw.v:48$1$0
  (= (ite (|register_rw#1| state) #b1 #b0) (|register_rw#8| next_state)) ; $procdff$101 $past$register_rw.v:48$2$0
  (= (ite (|register_rw#0| state) #b1 #b0) (|register_rw#7| next_state)) ; $procdff$100 $past$register_rw.v:52$3$0
  (= (|register_rw#4| state) (|register_rw#6| next_state)) ; $procdff$102 $past$register_rw.v:53$5$0
  (= (|register_rw#52| state) (|register_rw#3| next_state)) ; $auto$opt_dff.cc:764:run$128 \dffreg
  (= #b1 (|register_rw#2| next_state)) ; $procdff$97 \f_past_valid
)) ; end of module register_rw
; yosys-smt2-topmod register_rw
; end of yosys output
